name: Build API Example / Addon

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_call:
    inputs:
      type:
        description: 'Build type'
        required: true
        default: 'sdk'
        type: string
  workflow_dispatch:
    inputs:
      type:
        description: 'Build type'
        required: true
        default: 'demo'
        type: choice
        options:
          - demo
          - sdk
      debug:
        description: 'debug package'
        required: false
        default: false
        type: boolean
  release:
    types: [published]
  pull_request:
    types: [labeled, synchronize]

jobs:
  build-jenkins:
    if: ${{ inputs.type == 'sdk' || (github.event_name == 'release' && github.event.action == 'published') }}
    runs-on: ubuntu-latest
    steps:
      - name: Build
        run: |
          curl -X POST -sS -D- -o/dev/null ${{secrets.JENKINS_BUILD_URL}} \
          -H 'Content-Type: application/json' \
          -d "{\"branch\": \"${{github.ref_name}}\", \"type\": \"sdk\"}"

  build-windows:
    if: ${{ inputs.type == 'demo' || contains(github.event.pull_request.labels.*.name, 'ci:dep-update') }}
    strategy:
      matrix:
        arch: [ia32, x64]
    runs-on: windows-latest
    env:
      npm_config_arch: ${{ matrix.arch }}
      npm_config_agora_electron_arch: ${{ matrix.arch }}
      npm_config_agora_electron_sdk_arch: ${{ matrix.arch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Add VS to PATH
        if: ${{ inputs.debug }}
        shell: pwsh
        run: |
          $vsPath = & "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" -version "16,17" -products * -requires Microsoft.Component.MSBuild -property installationPath
          $vsPath = Join-Path $vsPath "Common7\IDE\CommonExtensions\Microsoft\CMake\CMake\bin"
          echo "$vsPath" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Build SDK
        run: |
          if ("${{ inputs.debug }}" -eq "true") {
              yarn totalBuild --debug=true --no_symbol=false
          } else {
              yarn totalBuild
          }
          yarn zipBuild
          yarn link

      - name: Build Example
        run: |
          yarn install
          yarn link agora-electron-sdk
          yarn dist:win --${{ matrix.arch }}
          yarn unlink agora-electron-sdk
        working-directory: example

      - uses: actions/upload-artifact@v3
        with:
          name: AgoraRtcNgExample-win-${{ matrix.arch }}
          path: |
            example/dist/Agora-Electron-API-Example-*-win.zip
          if-no-files-found: error

  build-mac:
    if: ${{ inputs.type == 'demo' || contains(github.event.pull_request.labels.*.name, 'ci:dep-update') }}
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Build SDK
        run: |
          if [[ "${{ inputs.debug }}" == "true" ]]; then
              yarn totalBuild --debug=true --no_symbol=false
          else
              yarn totalBuild
          fi
          yarn zipBuild
          yarn link

      - name: Build Example
        run: |
          yarn install
          yarn link agora-electron-sdk
          yarn dist:mac
          yarn unlink agora-electron-sdk
        env:
          USE_HARD_LINKS: false
        working-directory: example

      - uses: actions/upload-artifact@v3
        with:
          name: AgoraRtcNgExample-mac
          path: |
            example/dist/Agora-Electron-API-Example-*-mac.zip
          if-no-files-found: error

  notification:
    runs-on: ubuntu-latest
    needs: [build-windows, build-mac]
    steps:
      - run: |
          curl -X POST "https://qyapi.weixin.qq.com/cgi-bin/webhook/send?key=${{ secrets.WECHAT_KEY }}" -d '{"msgtype":"text","text":{"content":"Electron Example:\n${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\nDownload Link:\nhttps://nightly.link/${{ github.repository }}/actions/runs/${{ github.run_id }}"}}'
